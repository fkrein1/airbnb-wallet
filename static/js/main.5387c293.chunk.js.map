{"version":3,"sources":["actions/index.js","pages/Home.js","pages/Wallet.js","pages/Add.js","pages/Edit.js","App.js","reducers/travel.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["addExpense","expense","type","payload","saveEditExpense","index","expenses","Home","handleChange","target","setState","name","value","handleAddTrip","event","props","dispatch","history","trip","addTrip","state","push","this","id","className","onChange","placeholder","onClick","React","Component","connect","Wallet","sumExpenses","length","map","currency","exchangeRates","Number","ask","reduce","accumulator","curr","toFixed","askRate","editExpense","expenseToEdit","deleteExpense","to","width","height","viewBox","fill","xmlns","opacity","filter","cx","cy","r","d","stroke","stroke-width","stroke-linecap","stroke-linejoin","x","y","filterUnits","color-interpolation-filters","flood-opacity","result","mode","in","in2","stdDeviation","key","USD","timestamp","description","tag","method","travel","wallet","removeExpense","Add","submitExpense","addCurrencies","currencies","htmlFor","countryCurrency","a","fetch","currencyApi","json","currenciesData","selectedCurrencies","filteredCurrencies","Object","keys","includes","Edit","expenseToEditIndex","editedExpense","undefined","setEditExpense","App","exact","path","component","INITIAL_STATE","tripReducer","action","walletReducer","rootReducer","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.5387c293.chunk.js","sourcesContent":["export const addTrip = (trip) => ({\n  type: 'ADD_TRIP',\n  payload: trip,\n});\n\nconst addCurrencies = (currencies) => ({\n  type: 'ADD_CURRENCIES',\n  payload: currencies,\n});\n\nexport const getCurrencies = () => async (dispatch) => {\n  const currencyApi = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const currenciesData = await currencyApi.json();\n  const selectedCurrencies = [\"USD\", \"CAD\", \"EUR\", \"GBP\", \"ARS\", \"JPY\" ]\n  const filteredCurrencies = Object.keys(currenciesData)\n    .filter((currency) => selectedCurrencies.includes(currency));\n  dispatch(addCurrencies([ ...filteredCurrencies, 'BRL' ]));\n};\n\nconst addExpense = (expense) => ({\n  type: 'ADD_EXPENSE',\n  payload: expense,\n});\n\nexport const setExpense = (expense) => async (dispatch) => {\n  const currencyApi = await fetch('https://economia.awesomeapi.com.br/json/all');\n  const currenciesData = await currencyApi.json();\n  const payload = { \n    ...expense, \n    exchangeRates: { \"BRL\": { \"code\": \"BRL\", \"ask\": \"1\" }, ...currenciesData } \n  };\n  dispatch(addExpense(payload));\n};\n\nexport const removeExpense = (expense) => ({\n  type: 'REMOVE_EXPENSE',\n  payload: expense,\n});\n\nexport const editExpense = (expense, index) => {\n  return {\n    type: 'EDIT_EXPENSE',\n    payload: [index, expense],\n  };\n};\n\nexport const saveEditExpense = (expense, index, expenses) => {\n  return {\n    type: 'SAVE_EDIT_EXPENSE',\n    payload: expenses[index] = expense,\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTrip } from '../actions';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      trip: '',\n    };\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  }\n\n  handleAddTrip = (event) => {\n    const { dispatch, history } = this.props;\n    const { trip } = this.state;\n    dispatch(addTrip(trip));\n    this.setState({trip: ''});\n    history.push('/wallet')\n  }\n\n  render() {\n    const { trip } = this.state;\n    return (\n      <div id=\"home\" className=\"wrapper\">\n        <input\n          type=\"trip\"\n          name=\"trip\"\n          value={ trip }\n          onChange={ this.handleChange }\n          placeholder=\"Where are you going?\"\n        />\n        <button\n          type=\"button\"\n          onClick={ this.handleAddTrip }\n        >\n          Create trip\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Home);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeExpense, editExpense } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass Wallet extends React.Component {\n  sumExpenses = () => {\n    const { expenses } = this.props;\n    if (expenses.length === 0) return 0;\n    const total = expenses\n      .map(({ value, currency, exchangeRates }) => (\n        Number(value) * Number(exchangeRates[currency].ask)\n      ))\n      .reduce((accumulator, curr) => accumulator + curr);\n    return total.toFixed(2);\n  };\n\n  askRate = (expense) => Number(expense.exchangeRates[expense.currency].ask);\n\n  editExpense = (expense, index) => {\n    const { expenseToEdit, history } = this.props;\n    expenseToEdit(expense, index);\n    history.push('/edit');\n  }\n\n  render() {\n    const { trip, expenses, deleteExpense } = this.props;\n    return (\n      <div className=\"wrapper\">\n        <nav></nav>\n        <header>\n          <p>Your trip to</p>\n          <p id=\"trip\">{ trip }</p>\n          <div>\n            <p>Total spent </p>\n            <p id=\"spent\">{`R$${ this.sumExpenses() }`}</p>\n            <Link to=\"/add\">\n            <svg width=\"141\" height=\"134\" viewBox=\"0 0 151 144\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <g opacity=\"0.8\" filter=\"url(#filter0_f_1_484)\">\n              <circle cx=\"75.4688\" cy=\"75.5938\" r=\"26.7188\" fill=\"#1F615C\"/>\n              </g>\n              <circle cx=\"75\" cy=\"61\" r=\"37.5\" fill=\"#FF385C\"/>\n              <path d=\"M85.5469 61H64.4531M75 50.4531V71.5469V50.4531Z\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              <defs>\n              <filter id=\"filter0_f_1_484\" x=\"0.75\" y=\"0.875\" width=\"149.438\" height=\"149.438\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n              <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\n              <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\"/>\n              <feGaussianBlur stdDeviation=\"24\" result=\"effect1_foregroundBlur_1_484\"/>\n              </filter>\n              </defs>\n            </svg>\n          </Link>\n          </div>\n        </header>\n          { expenses.map((expense, index) => (\n            <div  key={ expense.exchangeRates.USD.timestamp } className=\"expense-card\">\n              <div className=\"expense-description\">\n                <p className=\"expense-focus\">{ expense.description }</p>\n                <p>{ expense.tag }</p>   \n              </div> \n              <div>\n                <p className=\"expense-focus\">{ `${Number(expense.value).toFixed(2)} ${expense.currency}` } </p>\n                <p>{ expense.method }</p>            \n                <p>{ `${(this.askRate(expense) * Number(expense.value)).toFixed(2)} BRL`}</p>\n              </div>\n              <div className=\"card-button\" >\n                <button\n                  type=\"button\"\n                  onClick={ () => this.editExpense(expense, index) }\n                >\n                  Edit\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={ () => deleteExpense(expense) }\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n\n          \n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteExpense: (expense) => {\n    dispatch(removeExpense(expense));\n  },\n\n  expenseToEdit: (expense, index) => {\n    dispatch(editExpense(expense, index));\n  },\n});\n\nconst mapStateToProps = (state) => ({\n  trip: state.travel.trip,\n  expenses: state.wallet.expenses,\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrencies, setExpense } from '../actions';\nimport { Link } from 'react-router-dom';\n\nclass Add extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Credit Card',\n      tag: 'Entertainment',\n    };\n  }\n\n  componentDidMount() {\n    const { addCurrencies } = this.props;\n    addCurrencies();\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  }\n\n  submitExpense = () => {\n    const { addExpense, history } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    addExpense({ value, description, currency, method, tag });\n    this.setState({ value: '', description: '' });\n    history.push('/wallet')\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    return (\n      <div className=\"wrapper\">\n        <nav><Link to=\"/wallet\">&lt;</Link></nav>\n        <form>\n          <label htmlFor=\"description\">\n            NAME\n            <br></br>\n            <input\n              id=\"description\"\n              name=\"description\"\n              type=\"text\"\n              value={ description }\n              onChange={ this.handleChange }\n            />\n          </label>\n\n          <label htmlFor=\"value\">\n            AMOUNT\n            <br></br>\n            <input\n              id=\"value\"\n              name=\"value\"\n              type=\"text\"\n              value={ value }\n              onChange={ this.handleChange }\n            />\n          </label>\n          <label htmlFor=\"currency\">\n            CURRENCY\n            <br></br>\n            <select\n              id=\"currency\"\n              name=\"currency\"\n              value={ currency }\n              onChange={ this.handleChange }\n            >\n              { currencies.map((countryCurrency) => (\n                <option\n                  key={ countryCurrency }\n                  value={ countryCurrency }\n                >\n                  { countryCurrency }\n                </option>))}\n            </select>\n          </label>\n\n          <label htmlFor=\"paymentMethod\">\n            PAYMENT METHOD\n            <br></br>\n            <select\n              id=\"paymentMethod\"\n              name=\"method\"\n              value={ method }\n              onChange={ this.handleChange }\n            >\n              <option value=\"Credit Card\">Credit Card</option>\n              <option value=\"Debit Card\">Debit Card</option>\n              <option value=\"Cash\">Cash</option>\n            </select>\n          </label>\n\n          <label htmlFor=\"category\">\n            CATEGORY\n            <br></br>\n            <select\n              id=\"category\"\n              name=\"tag\"\n              value={ tag }\n              onChange={ this.handleChange }\n            >\n              <option value=\"Entertainment\">Entertainment</option>\n              <option value=\"Food\">Food</option>\n              <option value=\"Lodging\">Lodging</option>\n              <option value=\"Transportation\">Transportation</option>\n            </select>\n          </label>\n\n          <button type=\"button\" onClick={ this.submitExpense }>\n            Add expense\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addCurrencies: () => {\n    dispatch(getCurrencies());\n  },\n  addExpense: (state) => {\n    dispatch(setExpense(state));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Add);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { saveEditExpense } from '../actions';\nimport { Link } from 'react-router-dom';\n\n\nclass Edit extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    };\n  }\n\n  componentDidMount() {\n    const { expenseToEdit } = this.props;\n    if(expenseToEdit !== undefined) {\n      const { value, description, currency, method, tag } = expenseToEdit;\n      this.setState({ value, description, currency, method, tag });\n    }\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ [target.name]: target.value });\n  }\n\n  editExpense = () => {\n    const { expenseToEdit, expenseToEditIndex, expenses, history } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    const editedExpense = { ...expenseToEdit, value, description, currency, method, tag };\n    saveEditExpense(editedExpense, expenseToEditIndex, expenses);\n    this.setState({\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    });\n    history.push('/wallet');\n  }\n\n  render() {\n    const { expenseToEdit, currencies } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    return (\n      <div className=\"wrapper\">\n        <nav><Link to=\"/wallet\">&lt;</Link></nav>\n        { expenseToEdit !== undefined && (\n          <form>\n            <label htmlFor=\"description\">\n              NAME\n              <br></br>\n              <input\n                id=\"description\"\n                name=\"description\"\n                type=\"text\"\n                value={ description }\n                onChange={ this.handleChange }\n              />\n            </label>\n  \n            <label htmlFor=\"value\">\n              AMOUNT\n              <br></br>\n              <input\n                id=\"value\"\n                name=\"value\"\n                type=\"text\"\n                value={ value }\n                onChange={ this.handleChange }\n              />\n            </label>\n            <label htmlFor=\"currency\">\n              CURRENCY\n              <br></br>\n              <select\n                id=\"currency\"\n                name=\"currency\"\n                value={ currency }\n                onChange={ this.handleChange }\n              >\n                { currencies.map((countryCurrency) => (\n                  <option\n                    key={ countryCurrency }\n                    value={ countryCurrency }\n                  >\n                    { countryCurrency }\n                  </option>))}\n              </select>\n            </label>\n  \n            <label htmlFor=\"paymentMethod\">\n              PAYMENT METHOD\n              <br></br>\n              <select\n                id=\"paymentMethod\"\n                name=\"method\"\n                value={ method }\n                onChange={ this.handleChange }\n              >\n                <option value=\"Credit Card\">Credit Card</option>\n                <option value=\"Debit Card\">Debit Card</option>\n                <option value=\"Cash\">Cash</option>\n              </select>\n            </label>\n  \n            <label htmlFor=\"category\">\n              CATEGORY\n              <br></br>\n              <select\n                id=\"category\"\n                name=\"tag\"\n                value={ tag }\n                onChange={ this.handleChange }\n              >\n                <option value=\"Entertainment\">Entertainment</option>\n                <option value=\"Food\">Food</option>\n                <option value=\"Lodging\">Lodging</option>\n                <option value=\"Transportation\">Transportation</option>\n              </select>\n            </label>\n  \n            <button type=\"button\" onClick={ this.editExpense }>\n              Save Edit\n            </button>\n          </form>\n\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenseToEdit: state.wallet.expenseToEdit[1],\n  expenseToEditIndex: state.wallet.expenseToEdit[0],\n  expenses: state.wallet.expenses,\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setEditExpense: (expense, index, expenses) => {\n    dispatch(saveEditExpense(expense, index, expenses));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Wallet from './pages/Wallet';\nimport Add from './pages/Add';\nimport Edit from './pages/Edit';\nimport './App.css'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/wallet\" component={ Wallet } />\n      <Route exact path=\"/add\" component={ Add } />\n      <Route exact path=\"/edit\" component={ Edit } />\n      <Route path=\"/\" component={ Home } />\n    </Switch>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\n  trip: 'Las Vegas',\n};\n\nconst tripReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'ADD_TRIP':\n    return { ...state, trip: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default tripReducer;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  expenseToEdit: {},\n}\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'ADD_CURRENCIES':\n    return { ...state, currencies: action.payload };\n  case 'ADD_EXPENSE':\n    return { ...state, expenses: [...state.expenses, action.payload] };\n  case 'REMOVE_EXPENSE':\n    return {\n      ...state,\n      expenses: [...state.expenses.filter((expense) => expense !== action.payload)],\n    };\n  case 'EDIT_EXPENSE':\n    return { ...state, expenseToEdit: action.payload };\n  case 'SAVE_EDIT_EXPENSE':\n    return { ...state, expenseToEdit: [], expenses: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n","import { combineReducers } from 'redux';\nimport travel from './travel';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ travel, wallet });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}